input {
  beats {
    port => 5044
    ssl => true
    ssl_certificate => "/etc/logstash/logstash.crt"
    ssl_key => "/etc/logstash/pkcs8_key.pem"
    ssl_verify_mode => "force_peer"
    ssl_certificate_authorities => ["/etc/logstash/ca.crt"]
  }
}

# 2019-01-16 20:37:13 empire : {"print": true, "message": "[*] Empire starting up..."}
filter {
  grok {
    match => { "message" => " empire : %{GREEDYDATA:json}$" }
  }
}

# Parse the date
filter { 
  grok { 
    match => ["message", "%{TIMESTAMP_ISO8601:timestamp}"] 
  } 

#  date { 
#    match => [ "timestamp", "ISO8601", "yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss"]
#    target => "@timestamp"
#    add_tag => [ "tsmatch" ]
#  }
}

# 2019-01-26 17:24:32 agents/JRACRT9C : {"print": false, "message": "[*] handle_agent_data(): sessionID JRACRT9C issued a TASKING_REQUEST"}
filter {
  grok {
    match => { "message" => " agents/%{USERNAME:agent} : %{GREEDYDATA:json}$" }
  }
}

# 2019-01-26 17:24:22 agents/JRACRT9C/python/collection/linux/pillage_user : {"print": true, "message": "[*] Tasked agent JRACRT9C to run module python/collection/linux/pillage_user", "options": {"AllUsers": {"Required": false, "Description": "Switch. Run for all users (needs root privileges!)", "Value": "False"}, "Sleep": {"Required": false, "Description": "Switch. Sleep the agent's normal interval between downloads, otherwise use one blast.", "Value": "True"}, "Agent": {"Required": true, "Description": "Agent to execute module on.", "Value": "JRACRT9C"}}}
filter {
  grok {
    match => { "message" => " agents/%{USERNAME:agent}/(?<empire.module>[a-z/_]+) : %{GREEDYDATA:json}$" }
  }
}

# 2019-01-26 17:24:27 listeners/http/http : {"print": false, "message": "[*] GET request for 192.168.2.131:80/login/process.php from 192.168.2.131"}
filter {
  grok {
    match => { "message" => " listeners/%{USERNAME:listener_type}/%{USERNAME:listener} : %{GREEDYDATA:json}$" }
  }
}

# 2019-01-28 09:00:32 agents/7HJ0QYZ5 : {"print": false, "message": "[!] Nonce verified: agent 7HJ0QYZ5 posted valid sysinfo checkin format: 9651055890329090|http://192.168.2.131:80||root|kali|127.0.1.1|Linux,kali,4.17.0-kali1-amd64,#1 SMP Debian 4.17.8-1kali1 (2018-07-24),x86_64|True|/usr/bin/python|56767|python|2.7"}
filter {
  grok {
    match => { "message" => "\|%{USERNAME:username}\|%{USERNAME:hostname}\|(?<internalip>[0-9\.]+)\|(?<OS>[a-zA-Z0-9 ,#\.\(\)-_]+)\|[a-zA-Z]+\|(?<process>[a-zA-Z0-9\/-]+)\|(?<pid>[0-9]+)\|(?<language>[a-zA-Z]+)\|(?<lang_version>[0-9\.]+)" }
  }
}

filter {
  grok {
    match => { "message" => 'Agent [A-Z0-9]+ from (?<extip>[0-9\.]+) posted public key"}' }
  }
}

filter {
  if [extip] {
    rest {
        request => {
            url => "http://127.0.0.1:42424/add?agent=%{agent}&extip=%{extip}"
        }
    json => true
    target => "dummy"
    }
  }
}

filter {
  if [process] {
    rest {
        request => {
            url => "http://127.0.0.1:42424/update"
            method => "post"
            headers => { 
                "Content-Type" => "application/json" 
            }
            params => {
                "agent" => "%{agent}"
                "hostname" => "%{hostname}"
                "process" => "%{process}"
                "lang_version" => "%{lang_version}"
                "OS" => "%{OS}"
                "pid" => "%{pid}"
                "language" => "%{language}"
                "internalip" => "%{internalip}"
                "username" => "%{username}"
            }
        }
        json => true
        target => "dummy"
    }
  }
}

filter {
  if [agent] {
    rest {
        request => {
           url => "http://127.0.0.1:42424/query?agent=%{agent}"
        }
    json => true
    target => "implant"
    }
  }
}

filter {
  json{
    source => "json"
    target => "empire"
  } 
}

output {
  elasticsearch {
    hosts => ["http://localhost:9200"]
    index => "%{[@metadata][beat]}-%{[@metadata][version]}-%{+YYYY.MM.dd}"
  }
}
